{"version":3,"sources":["components/Charts/Charts.module.css","components/CountryPicker/CountryPicker.module.css","images/covid.png","components/Cards/Cards.jsx","api/index.js","components/Charts/Charts.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","components/Cards/Cards.module.css","App.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBotto","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","console","log","fetchDailyData","modData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Charts","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","fontColor","label","borderColor","fill","backgroundColor","barChart","options","legend","display","tile","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","image","src","coronaImage","alt","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.76233e31.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Charts_container__1mZfu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControls\":\"CountryPicker_formControls__1HsmT\"};","module.exports = __webpack_public_path__ + \"static/media/covid.d7265326.png\";","import React from 'react';\nimport { Card , CardContent, Typography, Grid} from '@material-ui/core';\nimport CountUp from 'react-countup';\nimport cx from 'classnames';\n\nimport styles from './Cards.module.css';\n\nconst Cards = ( {data : {confirmed , recovered, deaths, lastUpdate} }) => {\n  if(! confirmed){\n    return 'Loading...';\n  }\n\n  return (\n    <div className={styles.container}>\n      <Grid container spacing ={3} justify=\"center\">\n        <Grid item component={Card} xs={12} md={3}className= {cx(styles.card,styles.infected)}>\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBotto>  Infected </Typography>\n\n            <Typography variant = \"h5\"> \n              <CountUp start= {0} end = {confirmed.value} duration={1.5} separator=\",\" />\n            </Typography>\n\n            <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n\n            <Typography variant=\"body2\"> Number of active cases</Typography>\n          </CardContent>\n        </Grid>\n\n        <Grid item component={Card} xs={12} md={3}className= {cx(styles.card,styles.recovered)}>\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBotto>  Recovered </Typography>\n\n            <Typography variant = \"h5\"> \n              <CountUp start= {0} end = {recovered.value} duration={2.5} separator=\",\" />\n            </Typography>\n\n            <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n\n            <Typography variant=\"body2\"> Number of recoveries </Typography>\n          </CardContent>\n        </Grid>\n\n        <Grid item component={Card} xs={12} md={3}className= {cx(styles.card,styles.deaths)}>\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBotto>  Deaths </Typography>\n            \n            <Typography variant = \"h5\"> \n              <CountUp start= {0} end = {deaths.value} duration={3.5} separator=\",\" />\n            </Typography>\n\n            <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n\n            <Typography variant=\"body2\"> Number of deaths </Typography>\n\n          </CardContent>\n        </Grid>\n      </Grid>\n    </div>\n\n  )\n}\n\nexport default Cards;","import axios from 'axios';\n\nconst url = 'https://covid19.mathdro.id/api';\n\nexport const fetchData = async(country) => {\n\n  let changeableUrl = url;\n  if(country){\n    changeableUrl =`${url}/countries/${country}`\n  }\n\n  try{\n    const { data: { confirmed, recovered, deaths, lastUpdate   } } = await axios.get(changeableUrl); \n\n    return { confirmed,  recovered, deaths, lastUpdate , };\n    \n    \n  } catch(error){\n    console.log(error);\n  \n  }\n}\n\n\nexport const fetchDailyData = async () =>{\n  try {\n    const { data } = await axios.get(`${url}/daily`); \n  \n    const modData = data.map((dailyData) =>({\n      confirmed: dailyData.confirmed.total ,\n      deaths: dailyData.deaths.total , \n      date: dailyData.reportDate,\n    \n    }));\n    return modData;\n\n  } catch(error){\n\n  }\n}\n\nexport const fetchCountries = async() => {\n  try{\n    const { data : { countries }} = await axios.get(`${url}/countries`); \n    \n    return countries.map((country) => country.name)\n    \n  }catch(error){\n    console.log(error);\n  }\n}\n","import React, { useState, useEffect } from 'react';\nimport { fetchDailyData } from '../../api';\nimport {Line, Bar} from 'react-chartjs-2';\n\nimport styles from './Charts.module.css';\n\nconst Charts = ({ data:{confirmed, deaths, recovered} ,country }) => {\n  const [dailyData, setDailyData]= useState([]);\n\n  useEffect(() => {\n\n    const fetchAPI = async () => {\n      setDailyData(await fetchDailyData());\n    }\n\n    fetchAPI(); \n\n  },[]);\n\n  const lineChart = (\n    \n    dailyData.length\n    ? (\n      <Line\n        data={{\n          labels: dailyData.map(({ date }) => date),\n          datasets: [{\n            data: dailyData.map(({ confirmed }) => confirmed), \n            fontColor: 'white',\n            label: 'Infected', \n            borderColor: '#3333ff',\n            fill: true,\n          }, {\n            data: dailyData.map(({ deaths }) => deaths),\n            fontColor: 'white',\n            label: 'Deaths', \n            borderColor: 'red',\n            backgroundColor: 'rgba(255, 0, 0, 0.5)',\n            fill: true,\n          }], \n        }}\n      />) : null\n      \n\n  ); \n\n  console.log(confirmed, recovered, deaths)\n\n  const barChart = (\n    confirmed\n      ? (\n        <Bar\n          data={{\n            labels:[ 'Infected' , 'Recovered', 'Deaths'],\n            datasets: [{\n              label:'People',\n              backgroundColor:[\n                'rgba(0 , 0, 255, 0.5)',\n                'rgba(51, 158, 51, 0.425)',\n                'rgba(255 , 0, 0.5)',\n              ],\n              data:[confirmed.value, recovered.value, deaths.value ]\n            }]\n\n          }}\n          options={{\n            legend: {display : false }, \n            tile: { display : true, text:`Current state in ${country}`}\n          }}\n        />\n      ) : null\n  );\n  return (\n    <div className={styles.container}>\n      {country ? barChart : lineChart}\n    </div>\n\n  );\n}\n\nexport default Charts;","import React,{ useState, useEffect } from 'react';\nimport { NativeSelect, FormControl } from '@material-ui/core';\n\nimport styles from './CountryPicker.module.css'; \nimport { fetchCountries} from '../../api';\n\nconst CountryPicker = ({ handleCountryChange }) => {\n    const [fetchedCountries, setFetchedCountries] = useState([]);\n\n    useEffect(() => {\n      const fetchAPI = async () =>{\n        setFetchedCountries( await fetchCountries());\n      }\n    fetchAPI();\n  }, [setFetchedCountries]);\n\n\n  return (\n    <FormControl className={styles.formControl}>\n      <NativeSelect defaultValue=\"\" onChange={ (e) =>  handleCountryChange(e.target.value)}>\n        <option value=\"\">Global</option>\n        {fetchedCountries.map((country, i)=><option key={i} value={country}>{country}</option>)}\n      </NativeSelect>\n    </FormControl>\n\n  );\n}\n\nexport default CountryPicker;","import React from 'react'; \n\nimport {Cards, Charts, CountryPicker} from './components';\n\nimport styles from './App.module.css';\n\nimport { fetchData } from './api';\n\nimport coronaImage from  './images/covid.png';\n\nclass App extends React.Component {\n\n  state = {\n    data: {},\n    country:'',\n\n  }\n\n  async componentDidMount() {\n    const fetchedData = await fetchData();\n\n    this.setState({data: fetchedData });\n  }\n\n  handleCountryChange = async (country) => {\n    const fetchedData = await fetchData(country);\n\n    this.setState({data : fetchedData, country: country})\n\n\n  }\n\n  render() {\n    const { data, country } = this.state;\n    return (\n      <div className={styles.container}>\n        <img className={styles.image} src={coronaImage} alt=\"COVID-19\"></img>\n        <Cards  data = {data} />\n        <CountryPicker handleCountryChange={this.handleCountryChange} />\n        <Charts data={data} country={country} />\n      </div>\n    );\n  }\n}\n\nexport default App; \n","import React from 'react';\nimport ReactDOM from  'react-dom'; \n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"image\":\"App_image__3byI1\"};"],"sourceRoot":""}